Программа обучения
(взято с http://job4j.ru/courses/java_with_zero_to_job.html)
(внесены дополнительные доработки - практические задания)

СКОРРЕКТИРОВАНО

✔	Глава1 - ООП

✓	Наследование
✓	Инкапсуляция
✓	Полиморфизм
✓	Внутренние класы
✓	Абстрактные классы
✓	Исключения - 
	     	блоки try,catch,finally; 
		try-with-resources (+ void addSuppressed(Throwable exception))
		StackTraceElement[] getStackTrace() 
			java.lang.StackTraceElement -
				String getClassName()
				int getLineNumber()
				String getMethodName()
				...
		 java.lang.Throwable -
		 	Throwable initCause(Throwable cause) 
			Throwable getCause(Throwable cause) 
			Throwable[] getSuppressed(), 
			addSuppressed(),
			...
	        рекомендации по обработке исключений 
			custom Exception for package (wrap standard exception)
	-------------------------------------------------------------------------

✔	Глава2 - Collections

✓	Параметризованные типы, Wildcard
✓	Итераторы 
✓	Интерфейс Iterator (описание методов hasNext(), getNext(), reset().
	Внутреннее устройство:
✓	Коллекции List
✓	Коллекции Stack, Queue
✓	Коллекции Set
✓	Коллекции Map
✓	Структуры Tree
✓	Hashcode, equals
-------------------------------------------------------------------------

   Глава3 - SQL, JDBC
   see: 
   Oracle Database JDBC Developer's Guide, 12c Release 1 (12.1)
   https://docs.oracle.com/database/121/JJDBC/E49300-05.pdf
   
   JSR-000221 JDBCTM API Specification 4.2 Maintenance Release 2 
   http://download.oracle.com/otn-pub/jcp/jdbc-4_2-mrel2-spec/jdbc4.2-fr-spec.pdf
   
   http://www.oracle.com/technetwork/database/application-development/jdbc/downloads/index.html
   https://blogs.oracle.com/dev2dev/get-oracle-jdbc-drivers-and-ucp-from-oracle-maven-repository-without-ides
   https://www.mkyong.com/maven/how-to-add-oracle-jdbc-driver-in-your-maven-local-repository/


✓ 	Индексирование, внешние ключи, естественные ключи
✓ 	Базовый синтаксис SQL
✓ 	Запросы Select, Join, Outer join - Left, Right
✓ 	Отношения "one2one", "one2many", "many2many" 
✓ 	JDBC
✓ 	     Connection
✓ 	     Connection pool
✓ 	     Statement, Preparestatement
✓ 	     ResultSet
✓ 	     AutoCommit
	     
	
✓       Практическое задание 5.1 (Глава5) - 
        Добиться отката всей операции при допустим ошибке на 5-м batch
 	Решено - используется connection.setAutoCommit(false) + одна транзакция, 
	в рамках которой последовательно идет выполнение batch-ей. В случае,
	если произойдет ошибка на каком-то batch-е произойдет откат всей серии batch-ей.
	см - 
	https://github.com/k0r0tk0ff/SequenceProcessor/blob/master/src/main/java/ru/k0r0tk0ff/sequence/processor/infrastructure/dao/PostgresSequenceDao.java
	https://github.com/k0r0tk0ff/SequenceProcessor/blob/master/src/main/java/ru/k0r0tk0ff/Main.java
  
  ------------------------------------------------------------------------

✓		Глава4 - Многопоточность

✓	Синхронные и асинхронные операции
✓	Синхронизация ресурсов
✓	Низкоуровневые блокировки
✓	Неблокирующие алгоритмы
✓	Потокобезопасные коллекции

✓	Практическое задание (Глава3) -
	Написать  приложение, которое в своей логике будет
	использовать многопоточность.
	https://github.com/k0r0tk0ff/ThreadTest
------------------------------------------------------------------------

Глава5 - Java Memory Model
	
	Cборщик мусора
	Типы сборщиков
	Профилирование приложений
	Soft weak ссылки и коллекции
	
	---------------------------------
	Практическое задание (Глава7) Профилирование приложений
	Для любой программы, написанной на java 
	сдалать dump процесса с испо. утилиты JDK jmap,
	затем используя программу VisualVM проанализировать потребление памяти	
	--------------------------------
------------------------------------------------------------------------

	Глава6	Ввод-вывод, Socket
	
	Java IO, NIO, NIO.2
	InputStreams, OutputStreams
	Readers, Writers
	Scanner
	TCP socket (Server, Client)
	
	
	Практическое задание (Глава6)
	Написать приложение, 
	которое бы использовало вышеприведенные технологии
	
------------------------------------------------------------------------	
	
	Глава7 Spring
 
        основы - IoC, Dependency Injection, Context
	Spring Core 
	Spring MVC (Filters, View, ... паттерн Chain Responcibility)
	Spring Security	
	
	Практическое задание (Глава8) -
	Написать приложение, которое бы использовало связку
	Spring Core + Spring MVC + Spring Security
------------------------------------------------------------------------
