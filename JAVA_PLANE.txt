
Программа обучения
(взято с http://job4j.ru/courses/java_with_zero_to_job.html)
(внесены дополнительные доработки - практические задания)

	Глава1 - ООП

	Наследование
	Инкапсуляция
	Полиморфизм
	Внутренние класы
	Абстрактные классы
	Исключения
-------------------------------------------------------------------------

	Глава2 - Collections

	Параметризованные типы, Wildcard
	Итераторы 
	Интерфейс Iterator (описание методов hasNext(), getNext(), reset().
	Внутреннее устройство:
	Коллекции List
	Коллекции Stack, Queue
	Коллекции Set
	Коллекции Map
	Структуры Tree
	Hashcode, equals
-------------------------------------------------------------------------

	Глава3 - Многопоточность

	Синхронные и асинхронные операции
	Синхронизация ресурсов
	JMM
	Низкоуровневые блокировки
	Неблокирующие алгоритмы
	Потокобезопасные коллекции

	Практическое задание (Глава3) -
	Написать  приложение, которое в своей логике будет
	использовать многопоточность.
------------------------------------------------------------------------

	Глава4 - SQL, JDBC

	Общие сведения о базах данных на основе PostgreSQL
	Базовый синтаксис SQL
	Запросы Select, Join, Outer join - Left, Right
	JDBC
	Индексирование, внешние ключи, естественные ключи
	
	Практическое задание (Глава5) - 
	Написать консольное приложение, в котором происходит обращение 
	к базе данных (можно Embedded), и полученный результат выводиться на экран. 
	Использовать: 
	1)Первоначальное создание таблиц путем чтения файла schema.sql 
	и последующего его парсинга на строки, 
	с последующим исполнением полученных из строк запросов.
	2)Запрос к базе должен находиться в файле query.sql.
	3)preparestatement;
	4)проследить за корректным закрытием ресурсов.	
------------------------------------------------------------------------

	Глава5 - Клиент-серверное приложение (web)

	Общая схема клиент-серверного приложения
	Протоколы HTTP и HTTPS
	Servlet
	JSP, MVC, JSLT
	Filter, Session, Auth
	Клиентские языки HTML, JS, CSS
	Тестирование Mockito

	Практическое задание (Глава5) - 
	Написать клиент-серверное приложение,
	в котором будут использоваться следующие технологии -
	Java Servlet, MVC, JSTL, Filter, Session, Auth, Mockito
------------------------------------------------------------------------

    Глава6 - Принципы разработки
	Принципы SOLID
		Single Responsibility
		Open - Close Principle
		Liskov`s substitution Principle
		Interface Segregation Principle
		Dependency Inversion Principle
	Разработка через тестирование (TDD)
------------------------------------------------------------------------

	Глава7 - Java Memory Model
	
	Cборщик мусора
	Типы сборщиков
	Профилирование приложений
	Soft weak ссылки и коллекции
	
	---------------------------------
	Практическое задание (Глава7) Профилирование приложений
	Для любой программы, написанной на java 
	сдалать dump процесса с испо. утилиты JDK jmap,
	затем используя программу VisualVM проанализировать потребление памяти	
	--------------------------------
------------------------------------------------------------------------

	Глава8	Ввод-вывод, Socket
	
	InputStreams, OutputStreams
	Readers, Writers
	Scanner
	Файловые менеджеры
	TCP socket
	Внешняя сортировка файлов
	
	Практическое задание (Глава8)
	Написать приложение, 
	которое бы использовало вышеприведенные технологии
	
------------------------------------------------------------------------	

	Глава9 - Функциональное программирование на Java 8
	Функциональный интерфейс
	Lambda
	Stream API
	Отличие внешнего от внутреннего итерирования
	Встроенные (обобщенные) функциональные интерфейсы -
	Predicate
	Function<T,R>
	Supplier<T>
	UnaryOperator<T>
	BynaryOperator<T>

	Практическое задание (Глава8) - 
	
	???
	Необходимы задания, с использованием промежуточных 
	peek, filter, map, reduce, sorted, distinct, limit, skip 
	и терминальных методов 
	forEach, collect, count, ...
------------------------------------------------------------------------	
	
	Глава10 Java EE
	1)EJB, JBoss RemoteEJB
	2)RMI API
	3)Web Service API
	4)REST API
	5)Асинхронные сообщения на базе JMS
	6)WebSocket
	7)Email
	8) JAX-RS
	9) JAX-WS 
	
	???
	Практическое задание (Глава8) -
	Для каждого пункта написать приложение, которое бы использовало 
	эту технологию
------------------------------------------------------------------------
	
	Глава11 - Hibernate
	
	Базовые понятия ORM. 
	Конфигурирование Hibernate (xml, @Annotation)
	Связь модельных представлений с объектами
	Язык запросов HQL
	Интеграционное тестирование
	
	Практическое задание (Глава8) -

	1) Написать простейшее приложение с использованием Hibernate	
	2) Выполнить интеграционное тестирование
------------------------------------------------------------------------
	Глава12 Spring

	Spring IoC
	Spring HibernateTemplate
	Spring Data JPA
	Spring MVC (Filters, View, ... паттерн Chain Responcibility)
	Spring Security
	Spring Test 
	(+ использование тестирования Spring приложений 
	с использованием Mockito и др. методик 
	???? )
	Spring Boot	
	
	Практическое задание (Глава11) -
	Написать приложение, которое бы использовало связку
	Spring Core + Spring JPA + Spring MVC + Spring Test
------------------------------------------------------------------------	

		
